<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.jpjproxy.dao.RiskResultCheckMapper" >
  <resultMap id="BaseResultMap" type="com.jpjproxy.entity.RiskResultCheck" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="customer_id" property="customerId" jdbcType="BIGINT" />
    <result column="auth_company" property="authCompany" jdbcType="VARCHAR" />
    <result column="risk_score" property="riskScore" jdbcType="DECIMAL" />
    <result column="result_url" property="resultUrl" jdbcType="VARCHAR" />
    <result column="result_pdf_url" property="resultPdfUrl" jdbcType="VARCHAR" />
    <result column="result" property="result" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, customer_id, auth_company, risk_score, result_url, result_pdf_url, result, create_time, 
    update_time, remark
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from t_risk_result_check
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from t_risk_result_check
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.jpjproxy.entity.RiskResultCheck" >
    insert into t_risk_result_check (id, customer_id, auth_company, 
      risk_score, result_url, result_pdf_url, 
      result, create_time, update_time, 
      remark)
    values (#{id,jdbcType=BIGINT}, #{customerId,jdbcType=BIGINT}, #{authCompany,jdbcType=VARCHAR}, 
      #{riskScore,jdbcType=DECIMAL}, #{resultUrl,jdbcType=VARCHAR}, #{resultPdfUrl,jdbcType=VARCHAR}, 
      #{result,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{remark,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.jpjproxy.entity.RiskResultCheck" >
    insert into t_risk_result_check
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="customerId != null" >
        customer_id,
      </if>
      <if test="authCompany != null" >
        auth_company,
      </if>
      <if test="riskScore != null" >
        risk_score,
      </if>
      <if test="resultUrl != null" >
        result_url,
      </if>
      <if test="resultPdfUrl != null" >
        result_pdf_url,
      </if>
      <if test="result != null" >
        result,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="remark != null" >
        remark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="customerId != null" >
        #{customerId,jdbcType=BIGINT},
      </if>
      <if test="authCompany != null" >
        #{authCompany,jdbcType=VARCHAR},
      </if>
      <if test="riskScore != null" >
        #{riskScore,jdbcType=DECIMAL},
      </if>
      <if test="resultUrl != null" >
        #{resultUrl,jdbcType=VARCHAR},
      </if>
      <if test="resultPdfUrl != null" >
        #{resultPdfUrl,jdbcType=VARCHAR},
      </if>
      <if test="result != null" >
        #{result,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.jpjproxy.entity.RiskResultCheck" >
    update t_risk_result_check
    <set >
      <if test="customerId != null" >
        customer_id = #{customerId,jdbcType=BIGINT},
      </if>
      <if test="authCompany != null" >
        auth_company = #{authCompany,jdbcType=VARCHAR},
      </if>
      <if test="riskScore != null" >
        risk_score = #{riskScore,jdbcType=DECIMAL},
      </if>
      <if test="resultUrl != null" >
        result_url = #{resultUrl,jdbcType=VARCHAR},
      </if>
      <if test="resultPdfUrl != null" >
        result_pdf_url = #{resultPdfUrl,jdbcType=VARCHAR},
      </if>
      <if test="result != null" >
        result = #{result,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.jpjproxy.entity.RiskResultCheck" >
    update t_risk_result_check
    set customer_id = #{customerId,jdbcType=BIGINT},
      auth_company = #{authCompany,jdbcType=VARCHAR},
      risk_score = #{riskScore,jdbcType=DECIMAL},
      result_url = #{resultUrl,jdbcType=VARCHAR},
      result_pdf_url = #{resultPdfUrl,jdbcType=VARCHAR},
      result = #{result,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      remark = #{remark,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <insert id="insertRiskResult" parameterType="com.jpjproxy.entity.RiskResult" >
    insert into t_risk_result_check (id, customer_id, auth_company,
    risk_score, result_url, result_pdf_url,
    result, create_time, update_time,
    remark)
    values (#{id,jdbcType=BIGINT}, #{customerId,jdbcType=BIGINT}, #{authCompany,jdbcType=VARCHAR},
    #{riskScore,jdbcType=DECIMAL}, #{resultUrl,jdbcType=VARCHAR}, #{resultPdfUrl,jdbcType=VARCHAR},
    #{result,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP},
    #{remark,jdbcType=VARCHAR})
  </insert>
  <delete id="deleteByCustomerId" parameterType="java.lang.Long" >
    delete from t_risk_result_check
    where customer_id = #{customerId,jdbcType=BIGINT}
  </delete>
</mapper>